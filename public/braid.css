/**
 * Themes generated at https://goodpalette.io/
 */

.theme-wheat {
    /* Primary: 24 Carrot */
    --color-primary-100: 255, 250, 242; /* rgb(255, 250, 242) */
    --color-primary-200: 255, 227, 190; /* rgb(255, 227, 190) */
    --color-primary-300: 252, 196, 136; /* rgb(252, 196, 136) */
    --color-primary-400: 244, 156, 82; /* rgb(244, 156, 82) */
    --color-primary-500: 230, 110, 30; /* rgb(230, 110, 30) */
    --color-primary-600: 182, 69, 10; /* rgb(182, 69, 10) */
    --color-primary-700: 134, 39, 2; /* rgb(134, 39, 2) */
    --color-primary-800: 86, 19, 0; /* rgb(86, 19, 0) */
    --color-primary-900: 38, 6, 0; /* rgb(38, 6, 0) */

    /* Accent: Skylla */
    --color-accent-100: 242, 247, 255; /* rgb(242, 247, 255) */
    --color-accent-200: 189, 217, 254; /* rgb(189, 217, 254) */
    --color-accent-300: 134, 189, 247; /* rgb(134, 189, 247) */
    --color-accent-400: 77, 159, 229; /* rgb(77, 159, 229) */
    --color-accent-500: 25, 126, 194; /* rgb(25, 126, 194) */
    --color-accent-600: 8, 105, 155; /* rgb(8, 105, 155) */
    --color-accent-700: 2, 84, 116; /* rgb(2, 84, 116) */
    --color-accent-800: 0, 60, 77; /* rgb(0, 60, 77) */
    --color-accent-900: 0, 32, 38; /* rgb(0, 32, 38) */

    /* Neutral */
    --color-neutral-100: 252, 251, 250; /* rgb(252, 251, 250) */
    --color-neutral-200: 238, 236, 233; /* rgb(238, 236, 233) */
    --color-neutral-300: 224, 220, 217; /* rgb(224, 220, 217) */
    --color-neutral-400: 210, 205, 200; /* rgb(210, 205, 200) */
    --color-neutral-500: 196, 189, 185; /* rgb(196, 189, 185) */
    --color-neutral-600: 157, 149, 146; /* rgb(157, 149, 146) */
    --color-neutral-700: 117, 110, 108; /* rgb(117, 110, 108) */
    --color-neutral-800: 78, 72, 71; /* rgb(78, 72, 71) */
    --color-neutral-900: 38, 35, 34; /* rgb(38, 35, 34) */
}

.theme-forest {
    /* Primary: Hidden Paradise */
    --color-primary-100: 245, 255, 242; /* rgb(245, 255, 242) */
    --color-primary-200: 218, 253, 206; /* rgb(218, 253, 206) */
    --color-primary-300: 187, 241, 163; /* rgb(187, 241, 163) */
    --color-primary-400: 148, 208, 112; /* rgb(148, 208, 112) */
    --color-primary-500: 94, 143, 57; /* rgb(94, 143, 57) */
    --color-primary-600: 74, 117, 33; /* rgb(74, 117, 33) */
    --color-primary-700: 59, 91, 20; /* rgb(59, 91, 20) */
    --color-primary-800: 44, 64, 13; /* rgb(44, 64, 13) */
    --color-primary-900: 28, 38, 8; /* rgb(28, 38, 8) */

    /* Accent: Rusty Nail */
    --color-accent-100: 255, 249, 242; /* rgb(255, 249, 242) */
    --color-accent-200: 254, 219, 189; /* rgb(254, 219, 189) */
    --color-accent-300: 249, 180, 135; /* rgb(249, 180, 135) */
    --color-accent-400: 236, 132, 79; /* rgb(236, 132, 79) */
    --color-accent-500: 209, 79, 27; /* rgb(209, 79, 27) */
    --color-accent-600: 166, 45, 9; /* rgb(166, 45, 9) */
    --color-accent-700: 124, 22, 2; /* rgb(124, 22, 2) */
    --color-accent-800: 81, 9, 0; /* rgb(81, 9, 0) */
    --color-accent-900: 38, 2, 0; /* rgb(38, 2, 0) */

    /* Neutral */
    --color-neutral-100: 250, 252, 250; /* rgb(250, 252, 250) */
    --color-neutral-200: 232, 235, 230; /* rgb(232, 235, 230) */
    --color-neutral-300: 213, 217, 211; /* rgb(213, 217, 211) */
    --color-neutral-400: 195, 199, 192; /* rgb(195, 199, 192) */
    --color-neutral-500: 177, 181, 174; /* rgb(177, 181, 174) */
    --color-neutral-600: 141, 145, 137; /* rgb(141, 145, 137) */
    --color-neutral-700: 106, 110, 102; /* rgb(106, 110, 102) */
    --color-neutral-800: 71, 74, 68; /* rgb(71, 74, 68) */
    --color-neutral-900: 37, 38, 34; /* rgb(37, 38, 34) */
}

.theme-river {
    /* Primary: Peaceful River */
    --color-primary-100: 242, 247, 255; /* rgb(242, 247, 255) */
    --color-primary-200: 202, 224, 254; /* rgb(202, 224, 254) */
    --color-primary-300: 160, 203, 250; /* rgb(160, 203, 250) */
    --color-primary-400: 115, 182, 238; /* rgb(115, 182, 238) */
    --color-primary-500: 71, 157, 214; /* rgb(71, 157, 214) */
    --color-primary-600: 36, 125, 170; /* rgb(36, 125, 170) */
    --color-primary-700: 20, 96, 126; /* rgb(20, 96, 126) */
    --color-primary-800: 11, 66, 82; /* rgb(11, 66, 82) */
    --color-primary-900: 5, 33, 38; /* rgb(5, 33, 38) */

    /* Accent: Banana Brick */
    --color-accent-100: 253, 255, 242; /* rgb(253, 255, 242) */
    --color-accent-200: 250, 255, 194; /* rgb(250, 255, 194) */
    --color-accent-300: 251, 252, 145; /* rgb(251, 252, 145) */
    --color-accent-400: 246, 240, 95; /* rgb(246, 240, 95) */
    --color-accent-500: 235, 216, 47; /* rgb(235, 216, 47) */
    --color-accent-600: 186, 159, 16; /* rgb(186, 159, 16) */
    --color-accent-700: 136, 108, 3; /* rgb(136, 108, 3) */
    --color-accent-800: 87, 63, 0; /* rgb(87, 63, 0) */
    --color-accent-900: 38, 26, 0; /* rgb(38, 26, 0) */

    /* Neutral */
    --color-neutral-100: 250, 251, 252; /* rgb(250, 251, 252) */
    --color-neutral-200: 232, 233, 235; /* rgb(232, 233, 235) */
    --color-neutral-300: 214, 215, 218; /* rgb(214, 215, 218) */
    --color-neutral-400: 196, 198, 201; /* rgb(196, 198, 201) */
    --color-neutral-500: 178, 181, 184; /* rgb(178, 181, 184) */
    --color-neutral-600: 140, 144, 147; /* rgb(140, 144, 147) */
    --color-neutral-700: 104, 108, 111; /* rgb(104, 108, 111) */
    --color-neutral-800: 68, 73, 75; /* rgb(68, 73, 75) */
    --color-neutral-900: 34, 37, 38; /* rgb(34, 37, 38) */
}

.theme-plum {
    /* Primary: Purple Vanity */
    --color-primary-100: 252, 242, 255; /* rgb(252, 242, 255) */
    --color-primary-200: 240, 200, 254; /* rgb(240, 200, 254) */
    --color-primary-300: 220, 155, 250; /* rgb(220, 155, 250) */
    --color-primary-400: 190, 109, 239; /* rgb(190, 109, 239) */
    --color-primary-500: 150, 63, 217; /* rgb(150, 63, 217) */
    --color-primary-600: 102, 30, 172; /* rgb(102, 30, 172) */
    --color-primary-700: 65, 15, 128; /* rgb(65, 15, 128) */
    --color-primary-800: 37, 8, 83; /* rgb(37, 8, 83) */
    --color-primary-900: 15, 3, 38; /* rgb(15, 3, 38) */

    /* Accent: Mint Jelly */
    --color-accent-100: 242, 255, 252; /* rgb(242, 255, 252) */
    --color-accent-200: 202, 255, 241; /* rgb(202, 255, 241) */
    --color-accent-300: 161, 251, 223; /* rgb(161, 251, 223) */
    --color-accent-400: 118, 243, 196; /* rgb(118, 243, 196) */
    --color-accent-500: 75, 227, 161; /* rgb(75, 227, 161) */
    --color-accent-600: 39, 180, 110; /* rgb(39, 180, 110) */
    --color-accent-700: 21, 133, 71; /* rgb(21, 133, 71) */
    --color-accent-800: 11, 85, 40; /* rgb(11, 85, 40) */
    --color-accent-900: 5, 38, 16; /* rgb(5, 38, 16) */

    /* Neutral */
    --color-neutral-100: 252, 250, 252; /* rgb(252, 250, 252) */
    --color-neutral-200: 236, 231, 237; /* rgb(236, 231, 237) */
    --color-neutral-300: 219, 212, 222; /* rgb(219, 212, 222) */
    --color-neutral-400: 202, 194, 207; /* rgb(202, 194, 207) */
    --color-neutral-500: 185, 176, 191; /* rgb(185, 176, 191) */
    --color-neutral-600: 147, 140, 153; /* rgb(147, 140, 153) */
    --color-neutral-700: 109, 104, 115; /* rgb(109, 104, 115) */
    --color-neutral-800: 72, 69, 77; /* rgb(72, 69, 77) */
    --color-neutral-900: 36, 34, 38; /* rgb(36, 34, 38) */
}
@font-face {
    font-family: 'Lato';
    font-weight: 100;
    src: url('fonts/Lato-Thin.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 100;
    font-style: italic;
    src: url('fonts/Lato-ThinItalic.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 300;
    src: url('fonts/Lato-Light.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 300;
    font-style: italic;
    src: url('fonts/Lato-LightItalic.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 400;
    src: url('fonts/Lato-Regular.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 400;
    font-style: italic;
    src: url('fonts/Lato-Italic.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 700;
    src: url('fonts/Lato-Bold.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 700;
    font-style: italic;
    src: url('fonts/Lato-BoldItalic.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 900;
    src: url('fonts/Lato-Black.woff2');
}

@font-face {
    font-family: 'Lato';
    font-weight: 900;
    font-style: italic;
    src: url('fonts/Lato-BlackItalic.woff2');
}
/*
! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}
.container {
  width: 100%;
}
@media (min-width: 640px) {

  .container {
    max-width: 640px;
  }
}
@media (min-width: 768px) {

  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {

  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1280px) {

  .container {
    max-width: 1280px;
  }
}
@media (min-width: 1536px) {

  .container {
    max-width: 1536px;
  }
}
.pl-prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.pl-prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.pl-prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.pl-prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.pl-prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.pl-prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.pl-prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.pl-prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.pl-prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.pl-prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.pl-prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.pl-prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.pl-prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.pl-prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.pl-prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.pl-prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.pl-prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.pl-prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}
.pl-prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}
.pl-prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.pl-prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.pl-prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.pl-prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.pl-prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}
.pl-prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}
.pl-prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}
.pl-prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
  font-weight: 600;
}
.pl-prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.pl-prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.pl-prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.pl-prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.pl-prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.pl-prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.pl-prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.pl-prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.pl-prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.pl-prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.pl-prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}
.pl-prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.pl-prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}
.pl-prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}
.pl-prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.pl-prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.pl-prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.pl-prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.pl-prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.pl-prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.pl-prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}
.pl-prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}
.pl-prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.pl-prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}
.pl-prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}
.pl-prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: start;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.pl-prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.pl-prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.pl-prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.pl-prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.pl-prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}
.pl-prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.pl-prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}
.pl-prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.pl-prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.pl-prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.pl-prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.pl-prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.pl-prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.pl-prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}
.pl-prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.pl-prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.pl-prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.pl-prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.pl-prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.pl-prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.pl-prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.pl-prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}
.pl-prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.pl-prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.pl-prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.pl-prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.pl-prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.pl-prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.pl-prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}
.pl-prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}
.pl-prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}
.pl-prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.pl-prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}
.pl-prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}
.pl-prose {
  --tw-prose-body: #334155;
  --tw-prose-headings: #0f172a;
  --tw-prose-lead: #475569;
  --tw-prose-links: #0f172a;
  --tw-prose-bold: #0f172a;
  --tw-prose-counters: #64748b;
  --tw-prose-bullets: #cbd5e1;
  --tw-prose-hr: #e2e8f0;
  --tw-prose-quotes: #0f172a;
  --tw-prose-quote-borders: #e2e8f0;
  --tw-prose-captions: #64748b;
  --tw-prose-kbd: #0f172a;
  --tw-prose-kbd-shadows: 15 23 42;
  --tw-prose-code: #0f172a;
  --tw-prose-pre-code: #e2e8f0;
  --tw-prose-pre-bg: #1e293b;
  --tw-prose-th-borders: #cbd5e1;
  --tw-prose-td-borders: #e2e8f0;
  --tw-prose-invert-body: #cbd5e1;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #94a3b8;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #94a3b8;
  --tw-prose-invert-bullets: #475569;
  --tw-prose-invert-hr: #334155;
  --tw-prose-invert-quotes: #f1f5f9;
  --tw-prose-invert-quote-borders: #334155;
  --tw-prose-invert-captions: #94a3b8;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #cbd5e1;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #475569;
  --tw-prose-invert-td-borders: #334155;
  padding: 0.5rem;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.relative {
  position: relative;
}
.z-0 {
  z-index: 0;
}
.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}
.ml-2 {
  margin-left: 0.5rem;
}
.ml-auto {
  margin-left: auto;
}
.mr-2 {
  margin-right: 0.5rem;
}
.mt-1 {
  margin-top: 0.25rem;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.h-12 {
  height: 3rem;
}
.h-4 {
  height: 1rem;
}
.h-6 {
  height: 1.5rem;
}
.h-\[100vh\] {
  height: 100vh;
}
.h-\[40px\] {
  height: 40px;
}
.h-full {
  height: 100%;
}
.min-h-\[100vh\] {
  min-height: 100vh;
}
.w-4 {
  width: 1rem;
}
.w-6 {
  width: 1.5rem;
}
.w-\[2px\] {
  width: 2px;
}
.w-full {
  width: 100%;
}
.w-max {
  width: -moz-max-content;
  width: max-content;
}
.basis-full {
  flex-basis: 100%;
}
.cursor-ns-resize {
  cursor: ns-resize;
}
.grid-cols-\[10px_minmax\(900px\2c _1fr\)\] {
  grid-template-columns: 10px minmax(900px, 1fr);
}
.grid-cols-\[250px_minmax\(900px\2c _1fr\)\] {
  grid-template-columns: 250px minmax(900px, 1fr);
}
.grid-rows-\[50px_1fr\] {
  grid-template-rows: 50px 1fr;
}
.items-center {
  align-items: center;
}
.items-stretch {
  align-items: stretch;
}
.justify-center {
  justify-content: center;
}
.gap-1 {
  gap: 0.25rem;
}
.gap-x-2 {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}
.self-stretch {
  align-self: stretch;
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.text-nowrap {
  text-wrap: nowrap;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded-l-\[15px\] {
  border-top-left-radius: 15px;
  border-bottom-left-radius: 15px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-b-2 {
  border-bottom-width: 2px;
}
.border-b-4 {
  border-bottom-width: 4px;
}
.border-l-4 {
  border-left-width: 4px;
}
.border-t-2 {
  border-top-width: 2px;
}
.border-accent-100 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--color-accent-100), 1);
  border-color: rgba(var(--color-accent-100), var(--tw-border-opacity));
}
.border-accent-400 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--color-accent-400), 1);
  border-color: rgba(var(--color-accent-400), var(--tw-border-opacity));
}
.border-neutral-300 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--color-neutral-300), 1);
  border-color: rgba(var(--color-neutral-300), var(--tw-border-opacity));
}
.border-neutral-50 {
  --tw-border-opacity: 1;
  border-color: rgb(250 250 250 / 1);
  border-color: rgb(250 250 250 / var(--tw-border-opacity));
}
.border-primary-400 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--color-primary-400), 1);
  border-color: rgba(var(--color-primary-400), var(--tw-border-opacity));
}
.border-transparent {
  border-color: transparent;
}
.border-accent-200 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--color-accent-200), 1);
  border-color: rgba(var(--color-accent-200), var(--tw-border-opacity));
}
.border-accent-300 {
  --tw-border-opacity: 1;
  border-color: rgba(var(--color-accent-300), 1);
  border-color: rgba(var(--color-accent-300), var(--tw-border-opacity));
}
.bg-accent-300 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-accent-300), 1);
  background-color: rgba(var(--color-accent-300), var(--tw-bg-opacity));
}
.bg-blue-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / 1);
  background-color: rgb(37 99 235 / var(--tw-bg-opacity));
}
.bg-neutral-100 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-100), 1);
  background-color: rgba(var(--color-neutral-100), var(--tw-bg-opacity));
}
.bg-neutral-200 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-200), 1);
  background-color: rgba(var(--color-neutral-200), var(--tw-bg-opacity));
}
.bg-neutral-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / 1);
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}
.bg-primary-300 {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-primary-300), 1);
  background-color: rgba(var(--color-primary-300), var(--tw-bg-opacity));
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / 1);
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.p-1 {
  padding: 0.25rem;
}
.p-2 {
  padding: 0.5rem;
}
.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}
.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.pl-1 {
  padding-left: 0.25rem;
}
.pl-2 {
  padding-left: 0.5rem;
}
.pr-2 {
  padding-right: 0.5rem;
}
.align-bottom {
  vertical-align: bottom;
}
.font-lato {
  font-family: Lato, sans-serif;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.font-bold {
  font-weight: 700;
}
.font-medium {
  font-weight: 500;
}
.font-semibold {
  font-weight: 600;
}
.text-accent-400 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-accent-400), 1);
  color: rgba(var(--color-accent-400), var(--tw-text-opacity));
}
.text-neutral-700 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-neutral-700), 1);
  color: rgba(var(--color-neutral-700), var(--tw-text-opacity));
}
.text-orange-400 {
  --tw-text-opacity: 1;
  color: rgb(251 146 60 / 1);
  color: rgb(251 146 60 / var(--tw-text-opacity));
}
.text-primary-800 {
  --tw-text-opacity: 1;
  color: rgba(var(--color-primary-800), 1);
  color: rgba(var(--color-primary-800), var(--tw-text-opacity));
}
.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / 1);
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.opacity-0 {
  opacity: 0;
}
.opacity-100 {
  opacity: 1;
}
.shadow-frame {
  --tw-shadow: -10px 0 30px -5px rgba(0, 0, 0, 0.3);
  --tw-shadow-colored: -10px 0 30px -5px var(--tw-shadow-color);
  box-shadow: 0 0 #0000, 0 0 #0000, -10px 0 30px -5px rgba(0, 0, 0, 0.3);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (prefers-color-scheme: dark) {

  .dark\:prose-invert {
    --tw-prose-body: var(--tw-prose-invert-body);
    --tw-prose-headings: var(--tw-prose-invert-headings);
    --tw-prose-lead: var(--tw-prose-invert-lead);
    --tw-prose-links: var(--tw-prose-invert-links);
    --tw-prose-bold: var(--tw-prose-invert-bold);
    --tw-prose-counters: var(--tw-prose-invert-counters);
    --tw-prose-bullets: var(--tw-prose-invert-bullets);
    --tw-prose-hr: var(--tw-prose-invert-hr);
    --tw-prose-quotes: var(--tw-prose-invert-quotes);
    --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
    --tw-prose-captions: var(--tw-prose-invert-captions);
    --tw-prose-kbd: var(--tw-prose-invert-kbd);
    --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
    --tw-prose-code: var(--tw-prose-invert-code);
    --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
    --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
    --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
    --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
  }
}

.hover\:border-accent-400:hover {
  --tw-border-opacity: 1;
  border-color: rgba(var(--color-accent-400), 1);
  border-color: rgba(var(--color-accent-400), var(--tw-border-opacity));
}

.hover\:bg-accent-400:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-accent-400), 1);
  background-color: rgba(var(--color-accent-400), var(--tw-bg-opacity));
}

.hover\:bg-neutral-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--color-neutral-100), 1);
  background-color: rgba(var(--color-neutral-100), var(--tw-bg-opacity));
}

.hover\:bg-neutral-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / 1);
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}

.hover\:bg-slate-200\/50:hover {
  background-color: rgb(226 232 240 / 0.5);
}

@media (prefers-color-scheme: dark) {

  .dark\:border-accent-100 {
    --tw-border-opacity: 1;
    border-color: rgba(var(--color-accent-100), 1);
    border-color: rgba(var(--color-accent-100), var(--tw-border-opacity));
  }

  .dark\:border-neutral-400 {
    --tw-border-opacity: 1;
    border-color: rgba(var(--color-neutral-400), 1);
    border-color: rgba(var(--color-neutral-400), var(--tw-border-opacity));
  }

  .dark\:border-neutral-500 {
    --tw-border-opacity: 1;
    border-color: rgba(var(--color-neutral-500), 1);
    border-color: rgba(var(--color-neutral-500), var(--tw-border-opacity));
  }

  .dark\:border-accent-200 {
    --tw-border-opacity: 1;
    border-color: rgba(var(--color-accent-200), 1);
    border-color: rgba(var(--color-accent-200), var(--tw-border-opacity));
  }

  .dark\:border-accent-300 {
    --tw-border-opacity: 1;
    border-color: rgba(var(--color-accent-300), 1);
    border-color: rgba(var(--color-accent-300), var(--tw-border-opacity));
  }

  .dark\:bg-neutral-400 {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-neutral-400), 1);
    background-color: rgba(var(--color-neutral-400), var(--tw-bg-opacity));
  }

  .dark\:bg-neutral-500 {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-neutral-500), 1);
    background-color: rgba(var(--color-neutral-500), var(--tw-bg-opacity));
  }

  .dark\:bg-neutral-600 {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-neutral-600), 1);
    background-color: rgba(var(--color-neutral-600), var(--tw-bg-opacity));
  }

  .dark\:bg-neutral-700 {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-neutral-700), 1);
    background-color: rgba(var(--color-neutral-700), var(--tw-bg-opacity));
  }

  .dark\:bg-primary-600 {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-primary-600), 1);
    background-color: rgba(var(--color-primary-600), var(--tw-bg-opacity));
  }

  .dark\:bg-neutral-800 {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-neutral-800), 1);
    background-color: rgba(var(--color-neutral-800), var(--tw-bg-opacity));
  }

  .dark\:text-accent-100 {
    --tw-text-opacity: 1;
    color: rgba(var(--color-accent-100), 1);
    color: rgba(var(--color-accent-100), var(--tw-text-opacity));
  }

  .dark\:text-neutral-100 {
    --tw-text-opacity: 1;
    color: rgba(var(--color-neutral-100), 1);
    color: rgba(var(--color-neutral-100), var(--tw-text-opacity));
  }

  .dark\:text-primary-200 {
    --tw-text-opacity: 1;
    color: rgba(var(--color-primary-200), 1);
    color: rgba(var(--color-primary-200), var(--tw-text-opacity));
  }

  .dark\:text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / 1);
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }

  .dark\:text-accent-200 {
    --tw-text-opacity: 1;
    color: rgba(var(--color-accent-200), 1);
    color: rgba(var(--color-accent-200), var(--tw-text-opacity));
  }

  .dark\:text-accent-300 {
    --tw-text-opacity: 1;
    color: rgba(var(--color-accent-300), 1);
    color: rgba(var(--color-accent-300), var(--tw-text-opacity));
  }

  .dark\:hover\:border-accent-100:hover {
    --tw-border-opacity: 1;
    border-color: rgba(var(--color-accent-100), 1);
    border-color: rgba(var(--color-accent-100), var(--tw-border-opacity));
  }

  .dark\:hover\:border-accent-200:hover {
    --tw-border-opacity: 1;
    border-color: rgba(var(--color-accent-200), 1);
    border-color: rgba(var(--color-accent-200), var(--tw-border-opacity));
  }

  .dark\:hover\:border-accent-300:hover {
    --tw-border-opacity: 1;
    border-color: rgba(var(--color-accent-300), 1);
    border-color: rgba(var(--color-accent-300), var(--tw-border-opacity));
  }

  .dark\:hover\:bg-accent-600:hover {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-accent-600), 1);
    background-color: rgba(var(--color-accent-600), var(--tw-bg-opacity));
  }

  .dark\:hover\:bg-neutral-500:hover {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-neutral-500), 1);
    background-color: rgba(var(--color-neutral-500), var(--tw-bg-opacity));
  }

  .dark\:hover\:bg-neutral-600:hover {
    --tw-bg-opacity: 1;
    background-color: rgba(var(--color-neutral-600), 1);
    background-color: rgba(var(--color-neutral-600), var(--tw-bg-opacity));
  }
}
